ARG buildarch
ARG BUILDER_IMG
ARG NODE_VERSION
ARG DEBIAN_VERSION
ARG SLIM
FROM ${BUILDER_IMG} as builder
FROM ${buildarch}node:${NODE_VERSION}-${DEBIAN_VERSION}${SLIM}
LABEL maintainer="Karsten Hassel"

USER root

WORKDIR /opt/magic_mirror

# copy startscripts into container:
COPY *.sh /opt/magic_mirror/
COPY --from=builder --chown=node:node /opt/magic_mirror /opt/magic_mirror

# procps, arp-scan and sudo needed for the module MMM-NetworkScanner
# sudo needed for the module MMM-Remote-Control
# sudo needed for cp in entrypoint
ARG GIT_INFO
ARG buildarch
ARG NODE_ENV
ARG DEBIAN_VERSION
ARG SLIM
ARG opt
RUN set -e; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install git nano sudo openssl ca-certificates wget tini gnupg; \
    if [ "${opt}" = "oy" ]; then \
      _pck="${_pck} libgtk-3-0 libx11-xcb-dev libnss3-dev libxss1 libxtst6 libasound2 libdrm2 libgbm1 libxshmfence1 fonts-arphic-uming procps arp-scan"; \
      if [ -n "${buildarch}" ] && [ "${DEBIAN_VERSION}" != "buster" ]; then \
        # install pi stuff
        _pck="${_pck} libraspberrypi-bin libgl1-mesa-dri libglapi-mesa libllvm11 libsensors5 libdrm-radeon1 libelf1 libdrm-amdgpu1 libdrm-nouveau2 x11-xserver-utils"; \
        wget https://archive.raspbian.org/raspbian.public.key -O - | apt-key add -; \
        echo 'deb http://raspbian.raspberrypi.org/raspbian/ '${DEBIAN_VERSION}' main contrib non-free rpi' | tee -a /etc/apt/sources.list; \
        wget -O - http://archive.raspberrypi.org/debian/raspberrypi.gpg.key | sudo apt-key add -; \
        echo 'deb http://archive.raspberrypi.org/debian/ '${DEBIAN_VERSION}' main ui' | tee -a /etc/apt/sources.list.d/raspi.list; \
        apt-get update; \
      fi; \
    fi; \
    [ "${NODE_ENV}" = "test" ] && _pck="${_pck} xvfb"; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy --no-install-recommends install ${_pck}; \
    DEBIAN_FRONTEND=noninteractive apt-get -qy remove gnupg; \
    if [ -z "${SLIM}" ]; then \
      # need newest version for arm32 so using pip
      DEBIAN_FRONTEND=noninteractive apt-get -qy install python3-dev python3-pip; \
      python3 -m pip install RPi.GPIO --no-cache-dir; \
      DEBIAN_FRONTEND=noninteractive apt-get -qy remove python3-dev python3-pip; \
      DEBIAN_FRONTEND=noninteractive apt-get -qy autoremove; \
    fi; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/*; \
    usermod -a -G video node; \
    echo "node ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers; \
    chmod +x *.sh; \
    chown node:node *.sh; \
    c_rehash; \
    groupadd --gid 997 gpio; \
    usermod -a -G gpio node; \
    ./build_info.sh "Runtime" "$GIT_INFO"; \
    rm -f build_info.sh;

USER node

ARG NODE_ENV
ENV ELECTRON_DISABLE_SANDBOX=1 \
    ELECTRON_DISABLE_GPU=1 \
    DBUS_SESSION_BUS_ADDRESS="unix:path=/var/run/dbus/system_bus_socket" \
    NODE_ENV=${NODE_ENV} \
    MM_OVERRIDE_DEFAULT_MODULES=true \
    MM_OVERRIDE_CSS=true

EXPOSE 8080

ENTRYPOINT ["/usr/bin/tini", "--", "./entrypoint.sh"]
